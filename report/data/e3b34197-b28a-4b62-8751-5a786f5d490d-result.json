{"name": "代办卡片短⽂本-居中-小号", "status": "broken", "statusDetails": {"message": "  File \"<string>\", line 0\n    \nSyntaxError: unexpected EOF while parsing", "trace": "dict_str = ''\n\n    def convert_json(dict_str: str) -> dict:\n        \"\"\"\n        :param dict_str: 长得像字典的字符串\n        return json格式的内容\n        \"\"\"\n        try:\n            if 'None' in dict_str:\n                dict_str = dict_str.replace('None', 'null')\n            elif 'True' in dict_str:\n                dict_str = dict_str.replace('True', 'true')\n            elif 'False' in dict_str:\n                dict_str = dict_str.replace('False', 'false')\n>           dict_str = json.loads(dict_str)\n\ntools/__init__.py:89: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ns = '', cls = None, object_hook = None, parse_float = None, parse_int = None\nparse_constant = None, object_pairs_hook = None, kw = {}\n\n    def loads(s, *, cls=None, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n        \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\n        containing a JSON document) to a Python object.\n    \n        ``object_hook`` is an optional function that will be called with the\n        result of any object literal decode (a ``dict``). The return value of\n        ``object_hook`` will be used instead of the ``dict``. This feature\n        can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n    \n        ``object_pairs_hook`` is an optional function that will be called with the\n        result of any object literal decoded with an ordered list of pairs.  The\n        return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders.  If ``object_hook``\n        is also defined, the ``object_pairs_hook`` takes priority.\n    \n        ``parse_float``, if specified, will be called with the string\n        of every JSON float to be decoded. By default this is equivalent to\n        float(num_str). This can be used to use another datatype or parser\n        for JSON floats (e.g. decimal.Decimal).\n    \n        ``parse_int``, if specified, will be called with the string\n        of every JSON int to be decoded. By default this is equivalent to\n        int(num_str). This can be used to use another datatype or parser\n        for JSON integers (e.g. float).\n    \n        ``parse_constant``, if specified, will be called with one of the\n        following strings: -Infinity, Infinity, NaN.\n        This can be used to raise an exception if invalid JSON numbers\n        are encountered.\n    \n        To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n        kwarg; otherwise ``JSONDecoder`` is used.\n        \"\"\"\n        if isinstance(s, str):\n            if s.startswith('\\ufeff'):\n                raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\n                                      s, 0)\n        else:\n            if not isinstance(s, (bytes, bytearray)):\n                raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n                                f'not {s.__class__.__name__}')\n            s = s.decode(detect_encoding(s), 'surrogatepass')\n    \n        if (cls is None and object_hook is None and\n                parse_int is None and parse_float is None and\n                parse_constant is None and object_pairs_hook is None and not kw):\n>           return _default_decoder.decode(s)\n\n/usr/local/Cellar/python@3.9/3.9.1_6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/__init__.py:346: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x1030db940>, s = ''\n_w = <built-in method match of re.Pattern object at 0x1030e61b0>\n\n    def decode(self, s, _w=WHITESPACE.match):\n        \"\"\"Return the Python representation of ``s`` (a ``str`` instance\n        containing a JSON document).\n    \n        \"\"\"\n>       obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n\n/usr/local/Cellar/python@3.9/3.9.1_6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/decoder.py:337: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x1030db940>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/local/Cellar/python@3.9/3.9.1_6/Frameworks/Python.framework/Versions/3.9/lib/python3.9/json/decoder.py:355: JSONDecodeError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_225', '统一代办', '发送统一代办消息', '代办卡片短⽂本-居中-小号', '/v1/todo/send?access_token=&$.case_100.access_token&', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntools/data_process.py:109: in assert_result\n    expect_dict = convert_json(expect_str)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndict_str = ''\n\n    def convert_json(dict_str: str) -> dict:\n        \"\"\"\n        :param dict_str: 长得像字典的字符串\n        return json格式的内容\n        \"\"\"\n        try:\n            if 'None' in dict_str:\n                dict_str = dict_str.replace('None', 'null')\n            elif 'True' in dict_str:\n                dict_str = dict_str.replace('True', 'true')\n            elif 'False' in dict_str:\n                dict_str = dict_str.replace('False', 'false')\n            dict_str = json.loads(dict_str)\n        except Exception as e:\n            if 'null' in dict_str:\n                dict_str = dict_str.replace('null', 'None')\n            elif 'true' in dict_str:\n                dict_str = dict_str.replace('true', 'True')\n            elif 'False' in dict_str:\n                dict_str = dict_str.replace('false', 'False')\n>           dict_str = eval(dict_str)\nE             File \"<string>\", line 0\nE               \nE           SyntaxError: unexpected EOF while parsing\n\ntools/__init__.py:97: SyntaxError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "d7a8f9de-b7f9-4ead-b427-79fd99cfaa25-attachment.txt", "type": "text/plain"}], "start": 1616132059360, "stop": 1616132059360}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "8beabc0c-9963-44b1-a9ee-c291a1101dff-attachment.txt", "type": "text/plain"}], "start": 1616132059360, "stop": 1616132059360}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "e228ad2b-eda7-420e-8c38-e24c23a6465b-attachment.txt", "type": "text/plain"}], "start": 1616132059363, "stop": 1616132059364}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "75374d6f-e06a-4fbe-8cbf-e32696e4b3e8-attachment.txt", "type": "text/plain"}], "start": 1616132059364, "stop": 1616132059364}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "ec0dd672-5116-4937-a1e9-3e6bd41dc8a3-attachment.txt", "type": "text/plain"}], "start": 1616132059698, "stop": 1616132059699}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "f585c887-3c40-4f06-b002-d11ab5a1815e-attachment.txt", "type": "text/plain"}], "start": 1616132059699, "stop": 1616132059699}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "2abd3d0d-200d-4346-b06c-4e027f38531d-attachment.txt", "type": "text/plain"}], "start": 1616132059699, "stop": 1616132059708}], "parameters": [{"name": "cases", "value": "['case_225', '统一代办', '发送统一代办消息', '代办卡片短⽂本-居中-小号', '/v1/todo/send?access_token=&$.case_100.access_token&', '', 'post', 'json', '', '{\\n    \"appid\": \"&$.test_023..datas[9].app_id&\",\\n    \"access_token\": \"&$.case_100.access_token&\",\\n    \"to_uids\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\", \"&$.test_005..datas[0].uid&\"],\\n    \"type\": \"attachment\",\\n    \"msg_status\": \"1\",\\n    \"message\": {\\n        \"id\": \"594ccc6d20e01c077b5c9013\",\\n        \"head\": {\\n            \"text\": \"头部标题的测试头部标题的测试头部标题的测试头部标题的测试头部标题的测试头部标题的测试头部标题的\",\\n            \"bgcolor\": \"FF0000\",\\n            \"tcolor\": \"FF0000\"\\n        },\\n        \"body\": {\\n            \"title\": \"抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试抬头部分测试\",\\n            \"content\": \"正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试正文部分测试\",\\n            \"image\": \"&$.case_022.media_id&\"\\n        },\\n        \"fields\": [\\n            {\\n                \"name\": \"静态文本框-测试静态文本框-测试静态文本框-测试静态文本框-测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 0,\\n                    \"name\": \"单选框-单⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"单⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": true\\n                }\\n            },\\n{\\n                \"name\": \"静态文本框-测试静态文本框-测试静态文本框-测试静态文本框-测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 0,\\n                    \"name\": \"单选框-单⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"单⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": true\\n                }\\n            },\\n{\\n                \"name\": \"静态文本框-测试静态文本框-测试静态文本框-测试静态文本框-测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 0,\\n                    \"name\": \"单选框-单⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"单⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": true\\n                }\\n            },\\n            {\\n                \"name\": \"多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试多行文本框测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 1,\\n                    \"name\": \"单选框-多⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"多⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": false\\n                }\\n            },\\n            {\\n                \"name\": \"多行文本框-测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 1,\\n                    \"name\": \"单选框-多⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"多⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": false\\n                }\\n            },\\n            {\\n                \"name\": \"多行文本框-测试\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 1,\\n                    \"name\": \"单选框-多⾏⽂本框\",\\n                    \"text\": \"右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试右侧文字测试\",\\n                    \"hint\": \"多⾏⽂本框\",\\n                    \"must\": true,\\n                    \"expand\": false\\n                }\\n            },\\n            {\\n                \"name\": \"单选框-数字⽂本框\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 2,\\n                    \"hint\": \"数字⽂本框\",\\n                    \"text\":\"1223131231412313018312031875718237131591823193185757192301314175812391831718391837118316810380123612836120284651203971239175665065651026061023610630136016301\",\\n                    \"name\": \"单选框-数字⽂本框\"\\n                }\\n            },\\n            {\\n                \"name\": \"单选框-数字⽂本框\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 2,\\n                    \"hint\": \"数字⽂本框\",\\n                    \"text\":\"1223131231412313018312031875718237131591823193185757192301314175812391831718391837118316810380123612836120284651203971239175665065651026061023610630136016301\",\\n                    \"name\": \"单选框-数字⽂本框\"\\n                }\\n            },\\n            {\\n                \"name\": \"单选框-数字⽂本框\",\\n                \"input\": {\\n                    \"type\": \"text\",\\n                    \"childtype\": 2,\\n                    \"hint\": \"数字⽂本框\",\\n                    \"text\":\"1223131231412313018312031875718237131591823193185757192301314175812391831718391837118316810380123612836120284651203971239175665065651026061023610630136016301\",\\n                    \"name\": \"单选框-数字⽂本框\"\\n                }\\n            }\\n        ],\\n        \"action\": [\\n            {\\n                \"name\": \"confirm\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"按钮点击提交按钮点击提交按钮点击提交\",\\n                \"color\": \"0F82F0\",\\n                \"confirm\": {\\n                    \"title\": \"确定提交吗\",\\n                    \"content\": \"\",\\n                    \"ok\": \"按钮点击确定\",\\n                    \"cancel\": \"按钮点击取消按钮点击取消按钮点击取消\"\\n                }\\n            },\\n            {\\n                \"name\": \"cancel\",\\n                \"value\": \"业务透传数据\",\\n                \"text\": \"按钮点击取消按钮点击取消按钮点击取消\",\\n                \"color\": \"979CA4\"\\n            }\\n        ]\\n    },\\n    \"card\":{\\n            \"msgtotal\":\"1\",\\n            \"title\":\"短⽂本-居中-小号\",\\n            \"tcolor\":\"#3AA3E3\",\\n            \"url\":\"viewpage.action?pageId=9701578\",\\n            \"notice\":\"1\",\\n            \"click_to_delete\":\"1\",\\n            \"short_text\":[\\n                {\\n                    \"text\":\"短⽂本-居中-小号\",\\n                    \"tcolor\":\"#3AA3E3\",\\n                    \"fontsize\":\"1\",\\n                    \"align\":\"2\",\\n                    \"url\":\"long_text&type=card\"\\n                }\\n            ]\\n        }\\n}', '', '', '']"}], "start": 1616132059359, "stop": 1616132059708, "uuid": "1a67772f-7f3b-4fa2-bd19-6f4385b97904", "historyId": "070449498019df5bd8ff4974973ab9cd", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "2415-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}