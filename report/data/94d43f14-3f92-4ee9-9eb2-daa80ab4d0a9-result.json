{"name": "删除成员 - 批量删除", "status": "broken", "statusDetails": {"message": "simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "cases = ['case_044', '通讯录管理', '成员管理', '删除成员 - 批量删除', '/v1/user/batch/delete?access_token=&$.case_001.access_token&', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n>       response, expect, sql = BaseRequest.send_request(cases)\n\ntest/test_api.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/base_requests.py:56: in send_request\n    res = cls.send_api(url, method, parametric_key, header, data, file)\napi/base_requests.py:90: in send_api\n    logger.info(f'\\n最终请求地址:{res.url}\\n请求方法:{method}\\n请求头:{header}\\n请求参数:{data}\\n上传文件:{file}\\n响应数据:{res.json()}')\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/requests/models.py:898: in json\n    return complexjson.loads(self.text, **kwargs)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/simplejson/__init__.py:525: in loads\n    return _default_decoder.decode(s)\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/simplejson/decoder.py:370: in decode\n    obj, end = self.raw_decode(s)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <simplejson.decoder.JSONDecoder object at 0x7fc5381fd990>\ns = '<!DOCTYPE html>\\n<html>\\n    <head>\\n        <meta name=\"robots\" content=\"noindex,nofollow\" />\\n        <style>\\n    ...         <h1>Whoops, looks like something went wrong.</h1>\\n                \\n            </div>\\n    </body>\\n</html>'\nidx = 0, _w = <built-in method match of re.Pattern object at 0x7fc4c8052930>\n_PY3 = True\n\n    def raw_decode(self, s, idx=0, _w=WHITESPACE.match, _PY3=PY3):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` or ``unicode``\n        beginning with a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n        Optionally, ``idx`` can be used to specify an offset in ``s`` where\n        the JSON document begins.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        if idx < 0:\n            # Ensure that raw_decode bails on negative indexes, the regex\n            # would otherwise mask this behavior. #98\n            raise JSONDecodeError('Expecting value', s, idx)\n        if _PY3 and not isinstance(s, str):\n            raise TypeError(\"Input string must be text, not bytes\")\n        # strip UTF-8 bom\n        if len(s) > idx:\n            ord0 = ord(s[idx])\n            if ord0 == 0xfeff:\n                idx += 1\n            elif ord0 == 0xef and s[idx:idx + 3] == '\\xef\\xbb\\xbf':\n                idx += 3\n>       return self.scan_once(s, idx=_w(s, idx).end())\nE       simplejson.errors.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/simplejson/decoder.py:400: JSONDecodeError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "8ebbf2da-8d67-4b9e-8a5a-39fdead4e964-attachment.txt", "type": "text/plain"}], "start": 1610439081597, "stop": 1610439081598}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "263da199-0d8a-467a-ac40-902accad255d-attachment.txt", "type": "text/plain"}], "start": 1610439081598, "stop": 1610439081598}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "1d98788c-4001-4c98-a7d1-c1c451fe7af2-attachment.txt", "type": "text/plain"}], "start": 1610439081598, "stop": 1610439081599}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "171e96bf-a586-4a5e-a9f9-88584d280793-attachment.txt", "type": "text/plain"}], "start": 1610439081599, "stop": 1610439081600}], "parameters": [{"name": "cases", "value": "['case_044', '通讯录管理', '成员管理', '删除成员 - 批量删除', '/v1/user/batch/delete?access_token=&$.case_001.access_token&', '', 'post', 'json', '', '{\\n \"uids\": [\"&$.case_039.users[0].uid&\", \"&$.case_039.users[1].uid&\", \"&$.case_039.users[2].uid&\", \"&$.case_039.users[3].uid&\", \"&$.case_039.users[4].uid&\"]\\n}', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1610439081597, "stop": 1610439082660, "uuid": "ad6b6088-efc3-4308-9eff-2a77d7c505cf", "historyId": "564d2e3dc2ac55922c6a7c009afa4eaa", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "feature", "value": "通讯录管理"}, {"name": "story", "value": "成员管理"}, {"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "14362-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}