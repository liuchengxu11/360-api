{"name": "发送图片", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:文件不存在 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '400004', 'errmsg': '文件不存在'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_102', '消息中心应用消息', '发送消息', '发送图片', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '400004', 'errmsg': '文件不存在'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:文件不存在 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "ac754084-7c7a-4bf1-8b81-ed5ce794f795-attachment.txt", "type": "text/plain"}], "start": 1616132011929, "stop": 1616132011929}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "e65f3223-3c7a-459c-9fd8-1bfc23d97325-attachment.txt", "type": "text/plain"}], "start": 1616132011929, "stop": 1616132011929}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "b7be193f-c140-465e-86bd-a00307a5b971-attachment.txt", "type": "text/plain"}], "start": 1616132011934, "stop": 1616132011934}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "d19887f3-8f05-4a66-a81f-f21331d181af-attachment.txt", "type": "text/plain"}], "start": 1616132011934, "stop": 1616132011935}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "f16d381b-c3cf-467d-9233-8da26b55ad7e-attachment.txt", "type": "text/plain"}], "start": 1616132012092, "stop": 1616132012093}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "d6652c6e-72e9-48db-995d-f6b99b704141-attachment.txt", "type": "text/plain"}], "start": 1616132012093, "stop": 1616132012093}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "2029c0da-8eb9-462c-bc59-6a1d33e30381-attachment.txt", "type": "text/plain"}], "start": 1616132012093, "stop": 1616132012099}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "855e3da0-9f12-4a6b-b66b-9bf0cfeb24a1-attachment.txt", "type": "text/plain"}], "start": 1616132012099, "stop": 1616132012099}], "parameters": [{"name": "cases", "value": "['case_102', '消息中心应用消息', '发送消息', '发送图片', '/v1/message/send', '', 'post', 'json', '', '{\\n \"appid\": \"&$.test_023..datas[8].app_id&\",\\n \"access_token\": \"&$.case_100.access_token&\",\\n \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\", \"&$.test_005..datas[0].uid&\"],\\n \"type\": \"image\",\\n \"message\": {\\n  \"media_id\":\"&$.case_022.media_id&\"\\n },\\n \"msg_status\": \"1\"\\n}', '', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1616132011929, "stop": 1616132012099, "uuid": "a6858499-8b05-4252-8c37-34c75b45fb17", "historyId": "831ac6ad3635af5db2f396b9a9fa1fe5", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "2415-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}