{"name": "发送语音", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:文件不存在 || 预期结果: 成功", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '400004', 'errmsg': '文件不存在'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n>               assert actual == v\nE               AssertionError\n\ntools/data_process.py:118: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['case_103', '消息中心应用消息', '发送消息', '发送语音', '/v1/message/send', '', ...]\n\n    @pytest.mark.flaky(reruns=0, reruns_delay=1)\n    def test_main(cases):#cases, get_db\n        # 此处的cases入参来自与 conftest.py  文件中 cases函数，与直接使用 @pytest.mark.parametrize\n        # 有着差不多的效果\n        # 发送请求\n        response, expect, sql = BaseRequest.send_request(cases)\n        # 执行sql\n        # DataProcess.handle_sql(sql, get_db)\n        # 断言操作\n>       DataProcess.assert_result(response, expect)\n\ntest/test_api.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'errcode': '400004', 'errmsg': '文件不存在'}\nexpect_str = '{\"$.errmsg\":\"成功\"}'\n\n    @classmethod\n    def assert_result(cls, response: dict, expect_str: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n        # 后置sql变量转换\n        expect_str = rep_expr(expect_str, DataProcess.response_dict)\n        expect_dict = convert_json(expect_str)\n        index = 0\n        for k, v in expect_dict.items():\n            # 获取需要断言的实际结果部分\n            actual = extractor(response, k)\n            index += 1\n            logger.info(f'第{index}个断言,实际结果:{actual} | 预期结果:{v} \\n断言结果 {actual == v}')\n            allure_step(f'第{index}个断言',  f'实际结果:{actual} = 预期结果:{v}')\n            try:\n                assert actual == v\n            except AssertionError:\n>               raise AssertionError(f'断言失败 -|- 实际结果:{actual} || 预期结果: {v}')\nE               AssertionError: 断言失败 -|- 实际结果:文件不存在 || 预期结果: 成功\n\ntools/data_process.py:120: AssertionError"}, "steps": [{"name": "请求地址", "status": "passed", "attachments": [{"name": "请求地址", "source": "8f1a207a-8a1b-477a-a7b3-1b67b1c83250-attachment.txt", "type": "text/plain"}], "start": 1616132012108, "stop": 1616132012109}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "19b66116-f270-49c4-9a33-4e80645d33b2-attachment.txt", "type": "text/plain"}], "start": 1616132012109, "stop": 1616132012109}, {"name": "请求参数", "status": "passed", "attachments": [{"name": "请求参数", "source": "455349c5-b155-4b92-a6e8-d3a0c9216af8-attachment.txt", "type": "text/plain"}], "start": 1616132012112, "stop": 1616132012113}, {"name": "上传文件", "status": "passed", "attachments": [{"name": "上传文件", "source": "f56bc817-df75-4ea1-bb30-ff098c2ee793-attachment.txt", "type": "text/plain"}], "start": 1616132012113, "stop": 1616132012113}, {"name": "响应耗时(s)", "status": "passed", "attachments": [{"name": "响应耗时(s)", "source": "87a97419-3a8d-4731-9c1e-9dade5e75bbb-attachment.txt", "type": "text/plain"}], "start": 1616132012227, "stop": 1616132012228}, {"name": "响应内容", "status": "passed", "attachments": [{"name": "响应内容", "source": "549b5c11-0885-4f23-82c1-cde0ada3b43c-attachment.txt", "type": "text/plain"}], "start": 1616132012228, "stop": 1616132012228}, {"name": "存储实际响应", "status": "passed", "attachments": [{"name": "存储实际响应", "source": "bbaf1ecb-469c-4e35-b1a4-fe89d9970fab-attachment.txt", "type": "text/plain"}], "start": 1616132012228, "stop": 1616132012235}, {"name": "第1个断言", "status": "passed", "attachments": [{"name": "第1个断言", "source": "94d67c44-15f0-400c-a0d0-702db4b30a80-attachment.txt", "type": "text/plain"}], "start": 1616132012236, "stop": 1616132012236}], "parameters": [{"name": "cases", "value": "['case_103', '消息中心应用消息', '发送消息', '发送语音', '/v1/message/send', '', 'post', 'json', '', '{\\n \"appid\": \"&$.test_023..datas[8].app_id&\",\\n \"access_token\": \"&$.case_100.access_token&\",\\n \"to_users\": [\"&$.test_010..datas[0].uid&\", \"&$.test_011..datas[0].uid&\", \"&$.test_004..datas[0].uid&\", \"&$.test_005..datas[0].uid&\"],\\n \"type\": \"audio\",\\n \"message\": {\\n  \"media_id\":\"&$.case_023.media_id&\",\\n  \"duration\": 10\\n },\\n \"msg_status\": \"1\"\\n}', '', '', '{\"$.errmsg\":\"成功\"}']"}], "start": 1616132012108, "stop": 1616132012236, "uuid": "8f6397ce-a291-40c6-bf34-81f9ed9cca89", "historyId": "e09235db78f8a450e7591086d32c3420", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=0, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "liuchengxudeMacBook-Pro.local"}, {"name": "thread", "value": "2415-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}